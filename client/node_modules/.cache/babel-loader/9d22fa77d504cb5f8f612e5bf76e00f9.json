{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michalwanto/Desktop/Testing-Trial/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{all,takeEvery,call,put}from\"redux-saga/effects\";import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import{fetchCollectionsSuccess,fetchCollectionsFailure}from\"./shop.actions.js\";import shopActionTypes from\"./shop.types\";export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection(\"collections\");_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionMap=_context.sent;_context.next=10;return put(fetchCollectionsSuccess(collectionMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(shopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","all","takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","shopActionTypes","collectionRef","collection","get","snapshot","collectionMap","message","FETCH_COLLECTIONS_START"],"mappings":"+MAaiBA,qB,iDAWAC,qB,iDAOAC,S,EA/BjB,OAASC,GAAT,CAAcC,SAAd,CAAyBC,IAAzB,CAA+BC,GAA/B,KAA0C,oBAA1C,CACA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAKA,OACEC,uBADF,CAEEC,uBAFF,KAGO,mBAHP,CAKA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAEA,MAAO,SAAUX,CAAAA,qBAAV,0LAEGY,aAFH,CAEmBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAFnB,iBAGc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHd,OAGGC,QAHH,+BAImB,MAAMV,CAAAA,IAAI,CAACG,+BAAD,CAAkCO,QAAlC,CAAV,CAJnB,OAIGC,aAJH,gCAKH,MAAMV,CAAAA,GAAG,CAACG,uBAAuB,CAACO,aAAD,CAAxB,CAAT,CALG,0GAOH,MAAMV,CAAAA,GAAG,CAACI,uBAAuB,CAAC,YAAMO,OAAP,CAAxB,CAAT,CAPG,qEAWP,MAAO,SAAUhB,CAAAA,qBAAV,qJACL,MAAMG,CAAAA,SAAS,CACbO,eAAe,CAACO,uBADH,CAEblB,qBAFa,CAAf,CADK,wDAOP,MAAO,SAAUE,CAAAA,SAAV,yIACL,MAAMC,CAAAA,GAAG,CAAC,CAACE,IAAI,CAACJ,qBAAD,CAAL,CAAD,CAAT,CADK","sourcesContent":["import { all, takeEvery, call, put } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions.js\";\n\nimport shopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}