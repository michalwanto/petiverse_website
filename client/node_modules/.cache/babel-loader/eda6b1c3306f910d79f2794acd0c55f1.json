{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\nimport { clearCart, fetchCartItemsFromFirestoreSuccess, fetchCartItemsFromFirestoreFailure } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nexport function* clearCartOnSignOutSuccess() {\n  yield put(clearCart());\n}\nexport function* addCartToAdminFirestoreAsync({\n  payload: items\n}) {\n  try {\n    const userRef = yield firestore.doc(`admin/customers/orders`);\n    const snapshot = yield userRef.get();\n    console.log(snapshot);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* addCartToFirestoreAsync({\n  payload: items\n}) {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const mapCartItems = yield items.map(item => item);\n    yield userRef.set({ ...snapshot.data(),\n      cartItems: mapCartItems\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* fetchCartItemsFromFirestoreAsync() {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const cartItems = yield snapshot.data().cartItems;\n    yield put(fetchCartItemsFromFirestoreSuccess(cartItems));\n  } catch (error) {\n    yield put(fetchCartItemsFromFirestoreFailure(error));\n  }\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOutSuccess);\n}\nexport function* onAddCartToFirestoreStart() {\n  yield takeLatest(CartActionTypes.ADD_CART_TO_FIRESTORE_START, addCartToFirestoreAsync);\n}\nexport function* onFetchCartItemsFromFirestoreStart() {\n  yield takeLatest(CartActionTypes.FETCH_CART_ITEMS_FROM_FIRESTORE_START, fetchCartItemsFromFirestoreAsync);\n}\nexport function* onAddCartToAdminFirestoreAsync() {\n  yield takeLatest(CartActionTypes.ADD_CART_TO_ADMIN_START, addCartToAdminFirestoreAsync);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddCartToFirestoreStart), call(onFetchCartItemsFromFirestoreStart), call(onAddCartToAdminFirestoreAsync)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/redux/cart/cart.sagas.js"],"names":["all","put","takeLatest","call","UserActionTypes","getCurrentUser","firestore","clearCart","fetchCartItemsFromFirestoreSuccess","fetchCartItemsFromFirestoreFailure","CartActionTypes","clearCartOnSignOutSuccess","addCartToAdminFirestoreAsync","payload","items","userRef","doc","snapshot","get","console","log","error","addCartToFirestoreAsync","userAuth","uid","mapCartItems","map","item","set","data","cartItems","fetchCartItemsFromFirestoreAsync","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddCartToFirestoreStart","ADD_CART_TO_FIRESTORE_START","onFetchCartItemsFromFirestoreStart","FETCH_CART_ITEMS_FROM_FIRESTORE_START","onAddCartToAdminFirestoreAsync","ADD_CART_TO_ADMIN_START","cartSagas"],"mappings":"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","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"../user/user.types\";\n\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\n\nimport {\n  clearCart,\n  fetchCartItemsFromFirestoreSuccess,\n  fetchCartItemsFromFirestoreFailure,\n} from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nexport function* clearCartOnSignOutSuccess() {\n  yield put(clearCart());\n}\n\nexport function* addCartToAdminFirestoreAsync({ payload: items }) {\n  try {\n    const userRef = yield firestore.doc(`admin/customers/orders`);\n    const snapshot = yield userRef.get();\n    console.log(snapshot);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* addCartToFirestoreAsync({ payload: items }) {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const mapCartItems = yield items.map((item) => item);\n    yield userRef.set({\n      ...snapshot.data(),\n      cartItems: mapCartItems,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* fetchCartItemsFromFirestoreAsync() {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const cartItems = yield snapshot.data().cartItems;\n    yield put(fetchCartItemsFromFirestoreSuccess(cartItems));\n  } catch (error) {\n    yield put(fetchCartItemsFromFirestoreFailure(error));\n  }\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOutSuccess);\n}\n\nexport function* onAddCartToFirestoreStart() {\n  yield takeLatest(\n    CartActionTypes.ADD_CART_TO_FIRESTORE_START,\n    addCartToFirestoreAsync\n  );\n}\n\nexport function* onFetchCartItemsFromFirestoreStart() {\n  yield takeLatest(\n    CartActionTypes.FETCH_CART_ITEMS_FROM_FIRESTORE_START,\n    fetchCartItemsFromFirestoreAsync\n  );\n}\n\nexport function* onAddCartToAdminFirestoreAsync() {\n  yield takeLatest(\n    CartActionTypes.ADD_CART_TO_ADMIN_START,\n    addCartToAdminFirestoreAsync\n  );\n}\n\nexport function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess),\n    call(onAddCartToFirestoreStart),\n    call(onFetchCartItemsFromFirestoreStart),\n    call(onAddCartToAdminFirestoreAsync),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}