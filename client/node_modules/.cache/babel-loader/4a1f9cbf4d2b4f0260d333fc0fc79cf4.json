{"ast":null,"code":"var _jsxFileName = \"/Users/michalwanto/Desktop/Petiverse/Petiverse-Website1/client/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./collection.styles.scss\";\nimport { convertCollectionsToMap } from \"../../firebase/firebase.utils\";\nimport { selectCollections } from \"../../redux/shop/shop.selectors\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst CollectionPage = ({\n  collections,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart({\n      category: \"shirt\"\n    });\n    fetchCollectionsStart({\n      category: \"costumes\"\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"collectionPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Collection Page\"), console.log(collections), collections.map(item => {\n    const itemImg = item.imageUrl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, console.log(itemImg[0]), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, item.name));\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: category => dispatch(fetchCollectionsStart(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Petiverse/Petiverse-Website1/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","createStructuredSelector","convertCollectionsToMap","selectCollections","fetchCollectionsStart","CollectionPage","collections","category","console","log","map","item","itemImg","imageUrl","name","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,0BAAP;AAEA,SAASC,uBAAT,QAAwC,+BAAxC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeF,EAAAA;AAAf,CAAD,KAA4C;AACjEL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB,CAAC;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAArB;AACAH,IAAAA,qBAAqB,CAAC;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAArB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGC,OAAO,CAACC,GAAR,CAAYH,WAAZ,CAFH,EAGGA,WAAW,CAACI,GAAZ,CAAiBC,IAAD,IAAU;AACzB,UAAMC,OAAO,GAAGD,IAAI,CAACE,QAArB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,OAAO,CAACC,GAAR,CAAYG,OAAO,CAAC,CAAD,CAAnB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACG,IAAV,CAFF,CADF;AAMD,GATA,CAHH,CADF;AAgBD,CAtBD;;AAwBA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC/CK,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;;AAGA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,qBAAqB,EAAGG,QAAD,IACrBU,QAAQ,CAACb,qBAAqB,CAACG,QAAD,CAAtB;AAF8B,CAAf,CAA3B;;AAKA,eAAeP,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,cAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./collection.styles.scss\";\n\nimport { convertCollectionsToMap } from \"../../firebase/firebase.utils\";\nimport { selectCollections } from \"../../redux/shop/shop.selectors\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst CollectionPage = ({ collections, fetchCollectionsStart }) => {\n  useEffect(() => {\n    fetchCollectionsStart({ category: \"shirt\" });\n    fetchCollectionsStart({ category: \"costumes\" });\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"collectionPageTitle\">Collection Page</h1>\n      {console.log(collections)}\n      {collections.map((item) => {\n        const itemImg = item.imageUrl;\n\n        return (\n          <div>\n            {console.log(itemImg[0])}\n            <h2>{item.name}</h2>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollections,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: (category) =>\n    dispatch(fetchCollectionsStart(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}