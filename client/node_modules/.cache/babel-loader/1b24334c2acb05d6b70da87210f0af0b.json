{"ast":null,"code":"var _jsxFileName = \"/Users/michalwanto/Desktop/Testing-Trial/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { addCartToAdminStart } from \"../../redux/cart/cart.actions\";\n\nconst StripeCheckoutButton = ({\n  price,\n  cartItems,\n  addCartToAdminStart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_51Fj8tREh1LbLp58TzJsVxn42WbhQkn5aZYYt0rtUJnMNoO0rYkMOE8Pq7wsFi4gswhmL7ljGLQvgjbzyVfLKuQmg00tNBg7hbg\";\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert(\"Payment Successful\");\n      addCartToAdminStart({\n        cartItems,\n        token\n      });\n    }).catch(error => {\n      console.log(\"Payment Error: \", JSON.parse(error));\n      alert(\"There was an error with your payment. Please ensure that you use the rigth payment\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addCartToAdminStart: cartItems => dispatch(addCartToAdminStart(cartItems))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","connect","createStructuredSelector","selectCartItems","addCartToAdminStart","StripeCheckoutButton","price","cartItems","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,mBAAT,QAAoC,+BAApC;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBH,EAAAA;AAApB,CAAD,KAA+C;AAC1E,QAAMI,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,cAAc,GAClB,6GADF;;AAGA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBX,IAAAA,KAAK,CAAC;AACJY,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQSC,QAAD,IAAc;AAClBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAd,MAAAA,mBAAmB,CAAC;AAAEG,QAAAA,SAAF;AAAaI,QAAAA;AAAb,OAAD,CAAnB;AACD,KAXH,EAYGQ,KAZH,CAYUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CACH,oFADG,CAAL;AAGD,KAjBH;AAkBD,GAnBD;;AAqBA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,KAAK,EAAC,gCAHR;AAIE,IAAA,WAAW,EAAG,kBAAiBZ,KAAM,EAJvC;AAKE,IAAA,MAAM,EAAEE,cALV;AAME,IAAA,UAAU,EAAC,SANb;AAOE,IAAA,KAAK,EAAEE,OAPT;AAQE,IAAA,SAAS,EAAED,cARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CAtCD;;AAwCA,MAAMgB,eAAe,GAAGvB,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD;;AAIA,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,mBAAmB,EAAGG,SAAD,IAAeoB,QAAQ,CAACvB,mBAAmB,CAACG,SAAD,CAApB;AADJ,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CACpBwB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbrB,oBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { addCartToAdminStart } from \"../../redux/cart/cart.actions\";\n\nconst StripeCheckoutButton = ({ price, cartItems, addCartToAdminStart }) => {\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51Fj8tREh1LbLp58TzJsVxn42WbhQkn5aZYYt0rtUJnMNoO0rYkMOE8Pq7wsFi4gswhmL7ljGLQvgjbzyVfLKuQmg00tNBg7hbg\";\n\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token,\n      },\n    })\n      .then((response) => {\n        alert(\"Payment Successful\");\n        addCartToAdminStart({ cartItems, token });\n      })\n      .catch((error) => {\n        console.log(\"Payment Error: \", JSON.parse(error));\n        alert(\n          \"There was an error with your payment. Please ensure that you use the rigth payment\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCartToAdminStart: (cartItems) => dispatch(addCartToAdminStart(cartItems)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StripeCheckoutButton);\n"]},"metadata":{},"sourceType":"module"}