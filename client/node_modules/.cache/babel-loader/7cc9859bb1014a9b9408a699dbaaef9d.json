{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"../user/user.types\";\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\nimport { clearCart, fetchCartItemsFromFirestoreSuccess, fetchCartItemsFromFirestoreFailure, addCartToAdminStart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nexport function* clearCartOnSignOutSuccess() {\n  yield put(clearCart());\n}\nexport function* addCartToAdminFirestoreAsync({\n  payload: {\n    cartItems,\n    token\n  }\n}) {\n  try {\n    yield console.log(cartItems, token); // const userRef = yield firestore.doc(`admin/customers/orders/test`);\n    // const snapshot = yield userRef.get();\n    // yield userRef.set({\n    //   ...snapshot.data(),\n    //   purchasedItems: items,\n    // });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* addCartToFirestoreAsync({\n  payload: items\n}) {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const mapCartItems = yield items.map(item => item);\n    yield userRef.set({ ...snapshot.data(),\n      cartItems: mapCartItems\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* fetchCartItemsFromFirestoreAsync() {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const cartItems = yield snapshot.data().cartItems;\n    yield put(fetchCartItemsFromFirestoreSuccess(cartItems));\n  } catch (error) {\n    yield put(fetchCartItemsFromFirestoreFailure(error));\n  }\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOutSuccess);\n}\nexport function* onAddCartToFirestoreStart() {\n  yield takeLatest(CartActionTypes.ADD_CART_TO_FIRESTORE_START, addCartToFirestoreAsync);\n}\nexport function* onFetchCartItemsFromFirestoreStart() {\n  yield takeLatest(CartActionTypes.FETCH_CART_ITEMS_FROM_FIRESTORE_START, fetchCartItemsFromFirestoreAsync);\n}\nexport function* onAddCartToAdminFirestoreAsync() {\n  yield takeLatest(CartActionTypes.ADD_CART_TO_ADMIN_START, addCartToAdminFirestoreAsync);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddCartToFirestoreStart), call(onFetchCartItemsFromFirestoreStart), call(onAddCartToAdminFirestoreAsync)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/redux/cart/cart.sagas.js"],"names":["all","put","takeLatest","call","UserActionTypes","getCurrentUser","firestore","clearCart","fetchCartItemsFromFirestoreSuccess","fetchCartItemsFromFirestoreFailure","addCartToAdminStart","CartActionTypes","clearCartOnSignOutSuccess","addCartToAdminFirestoreAsync","payload","cartItems","token","console","log","error","addCartToFirestoreAsync","items","userAuth","userRef","doc","uid","snapshot","get","mapCartItems","map","item","set","data","fetchCartItemsFromFirestoreAsync","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddCartToFirestoreStart","ADD_CART_TO_FIRESTORE_START","onFetchCartItemsFromFirestoreStart","FETCH_CART_ITEMS_FROM_FIRESTORE_START","onAddCartToAdminFirestoreAsync","ADD_CART_TO_ADMIN_START","cartSagas"],"mappings":"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","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"../user/user.types\";\n\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\n\nimport {\n  clearCart,\n  fetchCartItemsFromFirestoreSuccess,\n  fetchCartItemsFromFirestoreFailure,\n  addCartToAdminStart,\n} from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nexport function* clearCartOnSignOutSuccess() {\n  yield put(clearCart());\n}\n\nexport function* addCartToAdminFirestoreAsync({\n  payload: { cartItems, token },\n}) {\n  try {\n    yield console.log(cartItems, token);\n    // const userRef = yield firestore.doc(`admin/customers/orders/test`);\n    // const snapshot = yield userRef.get();\n    // yield userRef.set({\n    //   ...snapshot.data(),\n    //   purchasedItems: items,\n    // });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* addCartToFirestoreAsync({ payload: items }) {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const mapCartItems = yield items.map((item) => item);\n    yield userRef.set({\n      ...snapshot.data(),\n      cartItems: mapCartItems,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* fetchCartItemsFromFirestoreAsync() {\n  try {\n    const userAuth = yield getCurrentUser();\n    const userRef = yield firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = yield userRef.get();\n    const cartItems = yield snapshot.data().cartItems;\n    yield put(fetchCartItemsFromFirestoreSuccess(cartItems));\n  } catch (error) {\n    yield put(fetchCartItemsFromFirestoreFailure(error));\n  }\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOutSuccess);\n}\n\nexport function* onAddCartToFirestoreStart() {\n  yield takeLatest(\n    CartActionTypes.ADD_CART_TO_FIRESTORE_START,\n    addCartToFirestoreAsync\n  );\n}\n\nexport function* onFetchCartItemsFromFirestoreStart() {\n  yield takeLatest(\n    CartActionTypes.FETCH_CART_ITEMS_FROM_FIRESTORE_START,\n    fetchCartItemsFromFirestoreAsync\n  );\n}\n\nexport function* onAddCartToAdminFirestoreAsync() {\n  yield takeLatest(\n    CartActionTypes.ADD_CART_TO_ADMIN_START,\n    addCartToAdminFirestoreAsync\n  );\n}\n\nexport function* cartSagas() {\n  yield all([\n    call(onSignOutSuccess),\n    call(onAddCartToFirestoreStart),\n    call(onFetchCartItemsFromFirestoreStart),\n    call(onAddCartToAdminFirestoreAsync),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}