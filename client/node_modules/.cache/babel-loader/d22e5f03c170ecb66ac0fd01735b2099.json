{"ast":null,"code":"var _jsxFileName = \"/Users/michalwanto/Desktop/Testing-Trial/client/src/components/checkout-form/CheckoutForm.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutForm = ({\n  price,\n  onSuccessfulCheckout\n}) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState(); // const stripe = useStripe();\n  // const elements = useElements();\n\n  const handleFormSubmit = async ev => {\n    ev.preventDefault();\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value\n      }\n    }; // setProcessingTo(true);\n    // const { data: clientSecret } = await axios.post(\"/api/payment_intents\", {\n    //   amount: price * 100,\n    // });\n    // const cardElement = elements.getElement(CardElement);\n    // const paymentMethodReq = await stripe.createPaymentMethod({\n    //   type: \"card\",\n    //   card: cardElement,\n    //   billing_details: billingDetails,\n    // });\n    // console.log(paymentMethodReq);\n    // const confirmedCardPayment = await stripe.confirmCardPayment(clientSecret, {\n    //   payment_method: paymentMethodReq.paymentMethod.id,\n    // });\n    // console.log(confirmedCardPayment);\n    // onSuccessfulCheckout();\n  };\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: \"16px\",\n        color: \"#fff\",\n        \"::placeholder\": {\n          color: \"#87bbfd\"\n        }\n      },\n      invalid: {\n        color: \"#FFC7EE\",\n        iconColor: \"#FFC7EE\"\n      }\n    },\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BillingDetailsFields, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/components/checkout-form/CheckoutForm.jsx"],"names":["React","useState","styled","axios","Row","BillingDetailsFields","SubmitButton","CheckoutError","CardElement","useStripe","useElements","CardElementContainer","div","CheckoutForm","price","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","handleFormSubmit","ev","preventDefault","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","cardElementOptions","style","base","fontSize","color","invalid","iconColor","hidePostalCode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AAEA,MAAMC,oBAAoB,GAAGT,MAAM,CAACU,GAAI;;;;;;;;;CAAxC;;AAWA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqC;AACxD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,EAAlD,CAFwD,CAGxD;AACA;;AAEA,QAAMmB,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrCA,IAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,IAAI,EAAEH,EAAE,CAACI,MAAH,CAAUD,IAAV,CAAeE,KADA;AAErBC,MAAAA,KAAK,EAAEN,EAAE,CAACI,MAAH,CAAUE,KAAV,CAAgBD,KAFF;AAGrBE,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAER,EAAE,CAACI,MAAH,CAAUI,IAAV,CAAeH,KADd;AAEPI,QAAAA,KAAK,EAAET,EAAE,CAACI,MAAH,CAAUG,OAAV,CAAkBF,KAFlB;AAGPK,QAAAA,KAAK,EAAEV,EAAE,CAACI,MAAH,CAAUM,KAAV,CAAgBL,KAHhB;AAIPM,QAAAA,WAAW,EAAEX,EAAE,CAACI,MAAH,CAAUQ,GAAV,CAAcP;AAJpB;AAHY,KAAvB,CAHqC,CAcrC;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACD,GArCD;;AAuCA,QAAMQ,kBAAkB,GAAG;AACzBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,MADN;AAEJC,QAAAA,KAAK,EAAE,MAFH;AAGJ,yBAAiB;AACfA,UAAAA,KAAK,EAAE;AADQ;AAHb,OADD;AAQLC,MAAAA,OAAO,EAAE;AACPD,QAAAA,KAAK,EAAE,SADA;AAEPE,QAAAA,SAAS,EAAE;AAFJ;AARJ,KADkB;AAczBC,IAAAA,cAAc,EAAE;AAdS,GAA3B;AAiBA,sBACE;AAAM,IAAA,QAAQ,EAAErB,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CArED;;AAuEA,eAAeP,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\n\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\n\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutForm = ({ price, onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  // const stripe = useStripe();\n  // const elements = useElements();\n\n  const handleFormSubmit = async (ev) => {\n    ev.preventDefault();\n\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value,\n      },\n    };\n\n    // setProcessingTo(true);\n\n    // const { data: clientSecret } = await axios.post(\"/api/payment_intents\", {\n    //   amount: price * 100,\n    // });\n\n    // const cardElement = elements.getElement(CardElement);\n\n    // const paymentMethodReq = await stripe.createPaymentMethod({\n    //   type: \"card\",\n    //   card: cardElement,\n    //   billing_details: billingDetails,\n    // });\n\n    // console.log(paymentMethodReq);\n\n    // const confirmedCardPayment = await stripe.confirmCardPayment(clientSecret, {\n    //   payment_method: paymentMethodReq.paymentMethod.id,\n    // });\n\n    // console.log(confirmedCardPayment);\n\n    // onSuccessfulCheckout();\n  };\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: \"16px\",\n        color: \"#fff\",\n        \"::placeholder\": {\n          color: \"#87bbfd\",\n        },\n      },\n      invalid: {\n        color: \"#FFC7EE\",\n        iconColor: \"#FFC7EE\",\n      },\n    },\n    hidePostalCode: true,\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Row>\n        <BillingDetailsFields />\n      </Row>\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}