{"ast":null,"code":"import { all, takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions.js\";\nimport shopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync({\n  category\n}) {\n  let id = \"\";\n\n  switch (category) {\n    case \"shirt\":\n      id = \"1ISQtx97dSVjiYR472dy\";\n      break;\n\n    case \"costumes\":\n      id = \"KW745JXq2Ul4RaXyNbxf\";\n      break;\n\n    case \"dresses\":\n      id = \"X6zUVXBtRDGVYUiOzYLG\";\n      break;\n\n    case \"jackets\":\n      id = \"1g51AWLJBrnf5Mq4s6cRv\";\n      break;\n  }\n\n  try {\n    const collectionRef = firestore.doc(`shop/collection/clothing/${id}`);\n    const snapshot = yield collectionRef.get();\n    console.log(snapshot);\n    const shirtItems = yield snapshot.data();\n    yield put(fetchCollectionsSuccess(shirtItems));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Petiverse/Petiverse-Website1/client/src/redux/shop/shop.sagas.js"],"names":["all","takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","shopActionTypes","fetchCollectionsAsync","category","id","collectionRef","doc","snapshot","get","console","log","shirtItems","data","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,mBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA8C;AACnD,MAAIC,EAAE,GAAG,EAAT;;AACA,UAAQD,QAAR;AACE,SAAK,OAAL;AACEC,MAAAA,EAAE,GAAG,sBAAL;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,EAAE,GAAG,sBAAL;AACA;;AACF,SAAK,SAAL;AACEA,MAAAA,EAAE,GAAG,sBAAL;AACA;;AACF,SAAK,SAAL;AACEA,MAAAA,EAAE,GAAG,uBAAL;AACA;AAZJ;;AAeA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,GAAV,CAAe,4BAA2BF,EAAG,EAA7C,CAAtB;AACA,UAAMG,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,UAAU,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAzB;AACA,UAAMhB,GAAG,CAACG,uBAAuB,CAACY,UAAD,CAAxB,CAAT;AACD,GAND,CAME,OAAOE,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACI,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMrB,SAAS,CACbO,eAAe,CAACe,uBADH,EAEbd,qBAFa,CAAf;AAID;AAED,OAAO,UAAUe,SAAV,GAAsB;AAC3B,QAAMxB,GAAG,CAAC,CAACE,IAAI,CAACoB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, takeEvery, call, put } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions.js\";\n\nimport shopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync({ category }) {\n  let id = \"\";\n  switch (category) {\n    case \"shirt\":\n      id = \"1ISQtx97dSVjiYR472dy\";\n      break;\n    case \"costumes\":\n      id = \"KW745JXq2Ul4RaXyNbxf\";\n      break;\n    case \"dresses\":\n      id = \"X6zUVXBtRDGVYUiOzYLG\";\n      break;\n    case \"jackets\":\n      id = \"1g51AWLJBrnf5Mq4s6cRv\";\n      break;\n  }\n\n  try {\n    const collectionRef = firestore.doc(`shop/collection/clothing/${id}`);\n    const snapshot = yield collectionRef.get();\n    console.log(snapshot);\n    const shirtItems = yield snapshot.data();\n    yield put(fetchCollectionsSuccess(shirtItems));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}