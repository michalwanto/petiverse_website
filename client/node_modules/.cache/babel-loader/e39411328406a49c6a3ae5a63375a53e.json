{"ast":null,"code":"import { all, put, takeLatest, call } from \"redux-saga/effects\";\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\nimport AdminActionTypes from \"./admin.types\";\nexport function* fetchOrdersFromFirestoreAsync() {\n  try {\n    const userRef = yield firestore.collection(`admin/customers/orders`);\n    const snapshot = yield userRef.get();\n    const docs = yield snapshot.docs;\n    yield docs.map(doc => {\n      const data = doc.data();\n      const unixTime = new Date(data.token.created * 1000);\n      const time = unixTime.toLocaleString();\n\n      const dataArray = () => ({\n        email: data.token.email,\n        itemsPurchased: data.purchasedItems,\n        time: time\n      });\n\n      console.log(time);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* onFetchOrdersFromFirestoreStart() {\n  yield takeLatest(AdminActionTypes.FETCH_ORDERS_FROM_FIRESTORE_START, fetchOrdersFromFirestoreAsync);\n}\nexport function* adminSagas() {\n  yield all([call(onFetchOrdersFromFirestoreStart)]);\n}","map":{"version":3,"sources":["/Users/michalwanto/Desktop/Testing-Trial/client/src/redux/admin/admin.sagas.js"],"names":["all","put","takeLatest","call","getCurrentUser","firestore","AdminActionTypes","fetchOrdersFromFirestoreAsync","userRef","collection","snapshot","get","docs","map","doc","data","unixTime","Date","token","created","time","toLocaleString","dataArray","email","itemsPurchased","purchasedItems","console","log","error","onFetchOrdersFromFirestoreStart","FETCH_ORDERS_FROM_FIRESTORE_START","adminSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,+BAA1C;AAEA,OAAOC,gBAAP,MAA6B,eAA7B;AAEA,OAAO,UAAUC,6BAAV,GAA0C;AAC/C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMH,SAAS,CAACI,UAAV,CAAsB,wBAAtB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,GAAR,EAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AACA,UAAMA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;AACtB,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,IAA9B,CAAjB;AACA,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,cAAT,EAAb;;AACA,YAAMC,SAAS,GAAG,OAAO;AACvBC,QAAAA,KAAK,EAAER,IAAI,CAACG,KAAL,CAAWK,KADK;AAEvBC,QAAAA,cAAc,EAAET,IAAI,CAACU,cAFE;AAGvBL,QAAAA,IAAI,EAAEA;AAHiB,OAAP,CAAlB;;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,KAVK,CAAN;AAWD,GAfD,CAeE,OAAOQ,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;AAED,OAAO,UAAUC,+BAAV,GAA4C;AACjD,QAAM3B,UAAU,CACdI,gBAAgB,CAACwB,iCADH,EAEdvB,6BAFc,CAAhB;AAID;AAED,OAAO,UAAUwB,UAAV,GAAuB;AAC5B,QAAM/B,GAAG,CAAC,CAACG,IAAI,CAAC0B,+BAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, put, takeLatest, call } from \"redux-saga/effects\";\n\nimport { getCurrentUser, firestore } from \"../../firebase/firebase.utils\";\n\nimport AdminActionTypes from \"./admin.types\";\n\nexport function* fetchOrdersFromFirestoreAsync() {\n  try {\n    const userRef = yield firestore.collection(`admin/customers/orders`);\n    const snapshot = yield userRef.get();\n    const docs = yield snapshot.docs;\n    yield docs.map((doc) => {\n      const data = doc.data();\n      const unixTime = new Date(data.token.created * 1000);\n      const time = unixTime.toLocaleString();\n      const dataArray = () => ({\n        email: data.token.email,\n        itemsPurchased: data.purchasedItems,\n        time: time,\n      });\n      console.log(time);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* onFetchOrdersFromFirestoreStart() {\n  yield takeLatest(\n    AdminActionTypes.FETCH_ORDERS_FROM_FIRESTORE_START,\n    fetchOrdersFromFirestoreAsync\n  );\n}\n\nexport function* adminSagas() {\n  yield all([call(onFetchOrdersFromFirestoreStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}